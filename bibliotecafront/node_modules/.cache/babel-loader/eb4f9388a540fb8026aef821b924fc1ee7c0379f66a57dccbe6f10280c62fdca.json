{"ast":null,"code":"import axios from \"axios\";\nconst URLBASEAPI = 'http://localhost:4000/';\n\n// REQUISIÇÕES PADRÕES\n\n// PESQUISA\nconst requisicaoGet = async rota => {\n  const {\n    data\n  } = await axios.get(URLBASEAPI + rota); // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n  return data;\n};\n\n// DELETAR\nconst requisicaoDelete = async rota => {\n  const {\n    data\n  } = await axios.delete(URLBASEAPI + rota); // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n  return data;\n};\n\n// INSERIR\nconst requisicaoPost = async (rota, jsonBody) => {\n  const {\n    data\n  } = await axios.post(URLBASEAPI + rota, jsonBody); // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n  return data;\n};\n\n// ALTERAR\nconst requisicaoPut = async (rota, jsonBody) => {\n  const {\n    data\n  } = await axios.put(URLBASEAPI + rota, jsonBody); // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n  return data;\n};\n\n// METODOS ESPECIFICOS\n\n// Autores\n\nexport const getAutores = async () => {\n  const dados = await requisicaoGet('autor');\n  return dados;\n};\nexport const getAutor = async id => {\n  const dados = await requisicaoGet(`autor/${id}`);\n  return dados;\n};\nexport const excluirAutor = async id => {\n  const dados = await requisicaoDelete(`autor/${id}`);\n  return dados;\n};\nexport const inserirAutor = async autor => {\n  let json = {\n    \"autor\": autor // SE AS DUAS TIVEREM O MESMO NOME PODE SER SOMENTE A VARIAVEL QUE É RECEBIDA\n  };\n\n  const dados = await requisicaoPost('autor', json);\n  return dados;\n};\nexport const alterarAutor = async (id, autor) => {\n  let json = {\n    autor // PODE SER ASSIM SEGUINDO O DE CIMA\n  };\n\n  const dados = await requisicaoPut(`autor/${id}`, json);\n  return dados;\n};","map":{"version":3,"names":["axios","URLBASEAPI","requisicaoGet","rota","data","get","requisicaoDelete","delete","requisicaoPost","jsonBody","post","requisicaoPut","put","getAutores","dados","getAutor","id","excluirAutor","inserirAutor","autor","json","alterarAutor"],"sources":["/home/jon/Documentos/BIBLIOTECA/bibliotecafront/src/servico/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst URLBASEAPI = 'http://localhost:4000/'\n\n// REQUISIÇÕES PADRÕES\n\n// PESQUISA\nconst requisicaoGet = async (rota) => {\n    const { data } = await axios.get(URLBASEAPI + rota)         // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n    return data\n}\n\n// DELETAR\nconst requisicaoDelete = async (rota) => {\n    const { data } = await axios.delete(URLBASEAPI + rota)         // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n    return data\n}\n\n// INSERIR\nconst requisicaoPost = async (rota, jsonBody) => {\n    const { data } = await axios.post(URLBASEAPI + rota, jsonBody)         // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n    return data\n}\n\n// ALTERAR\nconst requisicaoPut = async (rota, jsonBody) => {\n    const { data } = await axios.put(URLBASEAPI + rota, jsonBody)         // { data } PARA DESCONTRUÇÃO DO JSON COM A RESPOSTA\n    return data\n}\n\n// METODOS ESPECIFICOS\n\n// Autores\n\nexport const getAutores = async () => {\n    const dados = await requisicaoGet('autor')\n    return dados\n}\n\n\nexport const getAutor = async (id) => {\n    const dados = await requisicaoGet(`autor/${id}`)\n    return dados\n}\n\nexport const excluirAutor = async (id) => {\n    const dados = await requisicaoDelete(`autor/${id}`)\n    return dados\n}\n\nexport const inserirAutor = async (autor) => {\n    let json = {\n        \"autor\": autor                      // SE AS DUAS TIVEREM O MESMO NOME PODE SER SOMENTE A VARIAVEL QUE É RECEBIDA\n    }\n\n    const dados = await requisicaoPost('autor', json)\n    return dados\n}\n\nexport const alterarAutor = async (id,autor) => {\n    let json = {\n        autor                   // PODE SER ASSIM SEGUINDO O DE CIMA\n    }\n\n    const dados = await requisicaoPut(`autor/${id}`, json)\n    return dados\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,wBAAwB;;AAE3C;;AAEA;AACA,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;EAClC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,UAAU,GAAGE,IAAI,CAAC,EAAS;EAC5D,OAAOC,IAAI;AACf,CAAC;;AAED;AACA,MAAME,gBAAgB,GAAG,MAAOH,IAAI,IAAK;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACO,MAAM,CAACN,UAAU,GAAGE,IAAI,CAAC,EAAS;EAC/D,OAAOC,IAAI;AACf,CAAC;;AAED;AACA,MAAMI,cAAc,GAAG,MAAAA,CAAOL,IAAI,EAAEM,QAAQ,KAAK;EAC7C,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACU,IAAI,CAACT,UAAU,GAAGE,IAAI,EAAEM,QAAQ,CAAC,EAAS;EACvE,OAAOL,IAAI;AACf,CAAC;;AAED;AACA,MAAMO,aAAa,GAAG,MAAAA,CAAOR,IAAI,EAAEM,QAAQ,KAAK;EAC5C,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAACX,UAAU,GAAGE,IAAI,EAAEM,QAAQ,CAAC,EAAS;EACtE,OAAOL,IAAI;AACf,CAAC;;AAED;;AAEA;;AAEA,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,KAAK,GAAG,MAAMZ,aAAa,CAAC,OAAO,CAAC;EAC1C,OAAOY,KAAK;AAChB,CAAC;AAGD,OAAO,MAAMC,QAAQ,GAAG,MAAOC,EAAE,IAAK;EAClC,MAAMF,KAAK,GAAG,MAAMZ,aAAa,CAAE,SAAQc,EAAG,EAAC,CAAC;EAChD,OAAOF,KAAK;AAChB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOD,EAAE,IAAK;EACtC,MAAMF,KAAK,GAAG,MAAMR,gBAAgB,CAAE,SAAQU,EAAG,EAAC,CAAC;EACnD,OAAOF,KAAK;AAChB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAIC,IAAI,GAAG;IACP,OAAO,EAAED,KAAK,CAAsB;EACxC,CAAC;;EAED,MAAML,KAAK,GAAG,MAAMN,cAAc,CAAC,OAAO,EAAEY,IAAI,CAAC;EACjD,OAAON,KAAK;AAChB,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAOL,EAAE,EAACG,KAAK,KAAK;EAC5C,IAAIC,IAAI,GAAG;IACPD,KAAK,CAAmB;EAC5B,CAAC;;EAED,MAAML,KAAK,GAAG,MAAMH,aAAa,CAAE,SAAQK,EAAG,EAAC,EAAEI,IAAI,CAAC;EACtD,OAAON,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}