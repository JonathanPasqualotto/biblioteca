{"ast":null,"code":"var _jsxFileName = \"/home/jon/Documentos/BIBLIOTECA/bibliotecafront/src/paginas/PessoaCad.js\",\n  _s = $RefreshSig$();\nimport CabecalhoCadastro from \"../componentes/CabecalhoCadastro\";\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { alterarPessoa, excluirPessoa, getPessoa, inserirPessoa } from \"../servico/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PessoaCad() {\n  _s();\n  //Declarando uma variável para utilizar o redirecionamento de tela\n  const navigate = useNavigate();\n\n  //Lendo o id recebido na rota\n  const {\n    id\n  } = useParams();\n\n  //Variáveis useState para cada campo da tabela, exceto chave primária\n  const [pessoa, setPessoa, setEmail, setTelefone] = useState({\n    pessoa: \"\",\n    email: \"\",\n    telefone: \"\"\n  });\n\n  // executa quando inicia a pagina\n  useEffect(() => {\n    const selecionar = async () => {\n      let resposta = await getPessoa(id);\n      console.log(resposta);\n      setPessoa(resposta);\n    };\n    if (id) {\n      selecionar();\n    }\n  }, [id]);\n  const voltar = () => {\n    navigate('/pessoas');\n  };\n  const cancelar = () => {\n    voltar();\n  };\n  const salvar = async () => {\n    if (id) {\n      //Put - Alterar\n      await alterarPessoa(id, pessoa.pessoa, pessoa.email, pessoa.telefone);\n    } else {\n      //Post - Inserir\n      await inserirPessoa(pessoa, email, telefone);\n    }\n    voltar();\n  };\n  const excluir = async () => {\n    if (!window.confirm('Deseja excluir o registro agora?')) return;\n    await excluirPessoa(id);\n    voltar();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CabecalhoCadastro, {\n      titulo: \"Pessoa\",\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Pessoa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: pessoa,\n          onChange: e => setPessoa(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Telefone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: telefone,\n          onChange: e => setTelefone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => salvar(),\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => cancelar(),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => excluir(),\n        hidden: !id,\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PessoaCad, \"Uhkxymvas4diV4hd76JmTW15Qyg=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PessoaCad;\nvar _c;\n$RefreshReg$(_c, \"PessoaCad\");","map":{"version":3,"names":["CabecalhoCadastro","Form","Button","useParams","useNavigate","useEffect","useState","alterarPessoa","excluirPessoa","getPessoa","inserirPessoa","jsxDEV","_jsxDEV","Fragment","_Fragment","PessoaCad","_s","navigate","id","pessoa","setPessoa","setEmail","setTelefone","email","telefone","selecionar","resposta","console","log","voltar","cancelar","salvar","excluir","window","confirm","children","titulo","fileName","_jsxFileName","lineNumber","columnNumber","Group","className","Label","Control","type","value","onChange","e","target","variant","onClick","hidden","_c","$RefreshReg$"],"sources":["/home/jon/Documentos/BIBLIOTECA/bibliotecafront/src/paginas/PessoaCad.js"],"sourcesContent":["import CabecalhoCadastro from \"../componentes/CabecalhoCadastro\";\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { alterarPessoa, excluirPessoa, getPessoa, inserirPessoa } from \"../servico/api\"\n\nexport default function PessoaCad(){\n    //Declarando uma variável para utilizar o redirecionamento de tela\n    const navigate = useNavigate();\n\n    //Lendo o id recebido na rota\n    const { id } = useParams(); \n\n    //Variáveis useState para cada campo da tabela, exceto chave primária\n    const [pessoa, setPessoa, setEmail, setTelefone] = useState({pessoa: \"\",email: \"\",telefone: \"\"});\n\n    // executa quando inicia a pagina\n    useEffect(()=>{\n        const selecionar = async () => {\n            let resposta = await getPessoa(id)\n            console.log(resposta)\n            setPessoa(resposta)\n        }\n\n        if (id){\n            selecionar()\n        }\n    }, [id]);\n\n    const voltar = () => {\n        navigate('/pessoas')\n    }\n\n    const cancelar = () => {\n        voltar();\n    }\n\n    const salvar = async () => {\n\n        if (id){\n            //Put - Alterar\n            await alterarPessoa(id, pessoa.pessoa,pessoa.email,pessoa.telefone)\n        }\n        else {\n            //Post - Inserir\n            await inserirPessoa(pessoa,email,telefone)\n        }\n\n        voltar()\n    }\n\n    const excluir = async () => {\n        if (! window.confirm('Deseja excluir o registro agora?'))\n            return;\n            await excluirPessoa(id)\n            voltar()\n    }\n\n    return (\n        <>\n            <CabecalhoCadastro titulo=\"Pessoa\" id={id}/>\n\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Pessoa</Form.Label>\n                    <Form.Control type=\"text\" value={pessoa} onChange={e => setPessoa(e.target.value)}/>\n                    <Form.Label>E-mail</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\n                    <Form.Label>Telefone</Form.Label>\n                    <Form.Control type=\"text\" value={telefone} onChange={e => setTelefone(e.target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={()=>salvar()}>Salvar</Button>\n                <Button variant=\"secondary\" onClick={()=>cancelar()}>Cancelar</Button>\n                <Button variant=\"danger\" onClick={()=>excluir()} hidden={!id}>Excluir</Button>\n            </Form>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}